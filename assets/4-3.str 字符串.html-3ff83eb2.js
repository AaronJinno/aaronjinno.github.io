import{_ as n,W as s,X as a,Z as t}from"./framework-ca8d4a1d.js";const e={},p=t(`<h2 id="i-字符串容器" tabindex="-1"><a class="header-anchor" href="#i-字符串容器" aria-hidden="true">#</a> Ⅰ. 字符串容器</h2><h4 id="_1-概念" tabindex="-1"><a class="header-anchor" href="#_1-概念" aria-hidden="true">#</a> 1. 概念</h4><p>字符串同样也是数据容器的一员，他存储的数据是字符。<br> 字符串是字符的容器，一个字符串可以存放任意数量的字符。</p><h4 id="_2-字符串的索引" tabindex="-1"><a class="header-anchor" href="#_2-字符串的索引" aria-hidden="true">#</a> 2. 字符串的索引</h4><p>和其它容器一样，字符串也可以通过下标进行字符访问。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>str1 <span class="token operator">=</span> <span class="token string">&quot;Hello123&quot;</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>str1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># H</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>str1<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-字符串容器的特点" tabindex="-1"><a class="header-anchor" href="#_3-字符串容器的特点" aria-hidden="true">#</a> 3. 字符串容器的特点</h4><ul><li>只可以存储字符串</li><li>长度任意（取决于内存大小）</li><li>支持下标索引</li><li>允许重复字符串存在</li><li>不可以修改（增加或删除元素等）</li><li>支持for循环</li></ul><h2 id="ii-字符串的操作" tabindex="-1"><a class="header-anchor" href="#ii-字符串的操作" aria-hidden="true">#</a> Ⅱ. 字符串的操作</h2><p>同元组一样，字符串是一个无法修改的数据容器。</p><p>有些操作表面上可以修改字符串，不过操作结果返回的是新的字符串，源字符串没有改变。</p><table><thead><tr><th style="text-align:left;">操作</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">字符串[下标]</td><td style="text-align:left;">根据下标索引取出特定位置字符</td></tr><tr><td style="text-align:left;">字符串.index(字符串)</td><td style="text-align:left;">查找给定字符的第一个匹配项的下标</td></tr><tr><td style="text-align:left;">字符串.replace(字符串1, 字符串2)</td><td style="text-align:left;">将字符串内的全部字符串1，替换为字符串2</td></tr><tr><td style="text-align:left;">字符串.split(字符串)</td><td style="text-align:left;">按照给定字符串，对字符串进行分隔</td></tr><tr><td style="text-align:left;">字符串.strip()</td><td style="text-align:left;">移除首尾的空格和换行符或指定字符串</td></tr><tr><td style="text-align:left;">字符串.count(字符串)</td><td style="text-align:left;">统计字符串内某字符串的出现次数</td></tr><tr><td style="text-align:left;">len(字符串)</td><td style="text-align:left;">统计字符串的字符个数</td></tr></tbody></table><h4 id="_1-index-获取索引" tabindex="-1"><a class="header-anchor" href="#_1-index-获取索引" aria-hidden="true">#</a> 1. index：获取索引</h4><p>通过index()方法获取字符串中指定字符的索引。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>str1 <span class="token operator">=</span> <span class="token string">&quot;Hello123&quot;</span>
<span class="token comment"># 多个字符串，按第一个字符算</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>str1<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">&quot;12&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 5</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-replace-字符串替换" tabindex="-1"><a class="header-anchor" href="#_2-replace-字符串替换" aria-hidden="true">#</a> 2. replace：字符串替换</h4><p>语法：字符串.replace(字符串1，字符串2)<br> 功能：将字符串内的全部：字符串1，替换为字符串2<br> PS：字符串是无法修改的，该方法返回的是一个新字符串。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>str1 <span class="token operator">=</span> <span class="token string">&quot;Hello123&quot;</span>
str2 <span class="token operator">=</span> str1<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;l&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;XX&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span>  <span class="token comment"># HeXXXXo123</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span>  <span class="token comment"># Hello123</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-split-字符串分割" tabindex="-1"><a class="header-anchor" href="#_3-split-字符串分割" aria-hidden="true">#</a> 3. split：字符串分割</h4><p>语法：字符串.split(分隔符字符串)<br> 功能：按照指定的分隔符字符串，将字符串划分为多个字符串，并存入列表对象中<br> PS：字符串本身不变，而是得到了一个列表对象</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>str1 <span class="token operator">=</span> <span class="token string">&quot;stick you finger in my ass&quot;</span>

str2 <span class="token operator">=</span> str1<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span>  <span class="token comment"># 通过空格分隔字符串</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span>  <span class="token comment"># [&#39;stick&#39;, &#39;you&#39;, &#39;finger&#39;, &#39;in&#39;, &#39;my&#39;, &#39;ass&#39;]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># &lt;class &#39;list&#39;&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-strip-去除指定字符串" tabindex="-1"><a class="header-anchor" href="#_4-strip-去除指定字符串" aria-hidden="true">#</a> 4. strip：去除指定字符串</h4><p>默认是去除前后的空格，如果给了参数，就去除参数指定的前后字符串。</p><ul><li>如果去除指定字符串，该字符串必须在整体字符串的前后，不能在中间</li><li>指定字符串或空格在前后会全部去除，无论是多少个，比如前后各10个空格，会全部去除。</li><li>可以指定多个字符，比如指定&quot;ab&quot;，其实是去除a和b，是按照单个字符算的</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>str1 <span class="token operator">=</span> <span class="token string">&quot;  fuck you  &quot;</span>
str2 <span class="token operator">=</span> <span class="token string">&quot;you are ass&quot;</span>

str3 <span class="token operator">=</span> str1<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
str4 <span class="token operator">=</span> str2<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">&quot;u&quot;</span><span class="token punctuation">)</span>
str5 <span class="token operator">=</span> str2<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">&quot;s&quot;</span><span class="token punctuation">)</span>
str6 <span class="token operator">=</span> str2<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">&quot;ys&quot;</span><span class="token punctuation">)</span>


<span class="token keyword">print</span><span class="token punctuation">(</span>str3<span class="token punctuation">)</span>  <span class="token comment"># fuck you</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>str4<span class="token punctuation">)</span>  <span class="token comment"># you are ass</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>str5<span class="token punctuation">)</span>  <span class="token comment"># you are a</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>str6<span class="token punctuation">)</span>  <span class="token comment"># ou are a</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-count-统计字符出现次数" tabindex="-1"><a class="header-anchor" href="#_5-count-统计字符出现次数" aria-hidden="true">#</a> 5. count：统计字符出现次数</h4><p>语法：字符串.count(字符串)。<br> 统计字符串中某字符串的出现次数。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>str1 <span class="token operator">=</span> <span class="token string">&quot; fuck you &quot;</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>str1<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 3</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>str1<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">&quot;u&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6-len-统计字符串长度" tabindex="-1"><a class="header-anchor" href="#_6-len-统计字符串长度" aria-hidden="true">#</a> 6. len：统计字符串长度</h4><p>语法：len(字符串)<br> 数字、字母、符号（包括空格）、中文，均算作一个字符。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>str1 <span class="token operator">=</span> <span class="token string">&quot; fuck you $ 哈 &quot;</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 14</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_7-遍历" tabindex="-1"><a class="header-anchor" href="#_7-遍历" aria-hidden="true">#</a> 7. 遍历</h4><p>同列表、元组一样，字符串也支持while循环和for循环进行遍历。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>str1 <span class="token operator">=</span> <span class="token string">&quot;boy next door&quot;</span>

index <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">while</span> index <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>str1<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span>
    index <span class="token operator">+=</span> <span class="token number">1</span>


<span class="token keyword">for</span> i <span class="token keyword">in</span> str1<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,34),i=[p];function l(o,c){return s(),a("div",null,i)}const u=n(e,[["render",l],["__file","4-3.str 字符串.html.vue"]]);export{u as default};
