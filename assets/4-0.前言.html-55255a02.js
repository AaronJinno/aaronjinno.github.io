import{_ as t,W as e,X as l,Z as d}from"./framework-ca8d4a1d.js";const a={},i=d('<h4 id="_1-概念" tabindex="-1"><a class="header-anchor" href="#_1-概念" aria-hidden="true">#</a> 1. 概念</h4><p>Python中的数据容器指的是一种可以容纳多份数据的数据类型，容纳的每一份数据称之为1个元素 每一个元素，可以是任意类型的数据，如字符串、数字、布尔等。</p><h4 id="_2-分类" tabindex="-1"><a class="header-anchor" href="#_2-分类" aria-hidden="true">#</a> 2. 分类</h4><p>根据数据容器的特点：是否支持重复元素、是否可以修改、是否有序等，可以分为5类。<br> 分别为：list（列表）、tuple（元组）、str（字符串）、set（集合）、dict（字典）</p><h4 id="_3-数据容器对比" tabindex="-1"><a class="header-anchor" href="#_3-数据容器对比" aria-hidden="true">#</a> 3. 数据容器对比</h4><table><thead><tr><th style="text-align:left;"></th><th style="text-align:left;">列表</th><th style="text-align:left;">元组</th><th style="text-align:left;">字符串</th><th style="text-align:left;">集合</th><th style="text-align:left;">字典</th></tr></thead><tbody><tr><td style="text-align:left;">元素数量</td><td style="text-align:left;">支持多个</td><td style="text-align:left;">支持多个</td><td style="text-align:left;">支持多个</td><td style="text-align:left;">支持多个</td><td style="text-align:left;">支持多个</td></tr><tr><td style="text-align:left;">元素类型</td><td style="text-align:left;">任意</td><td style="text-align:left;">任意</td><td style="text-align:left;">仅字符</td><td style="text-align:left;">任意</td><td style="text-align:left;">Key：Value</td></tr><tr><td style="text-align:left;">下标索引</td><td style="text-align:left;">支持</td><td style="text-align:left;">支持</td><td style="text-align:left;">支持</td><td style="text-align:left;">不支持</td><td style="text-align:left;">不支持</td></tr><tr><td style="text-align:left;">重复元素</td><td style="text-align:left;">支持</td><td style="text-align:left;">支持</td><td style="text-align:left;">支持</td><td style="text-align:left;">不支持</td><td style="text-align:left;">不支持</td></tr><tr><td style="text-align:left;">可修改性</td><td style="text-align:left;">支持</td><td style="text-align:left;">不支持</td><td style="text-align:left;">不支持</td><td style="text-align:left;">支持</td><td style="text-align:left;">支持</td></tr><tr><td style="text-align:left;">数据有序</td><td style="text-align:left;">是</td><td style="text-align:left;">是</td><td style="text-align:left;">是</td><td style="text-align:left;">否</td><td style="text-align:left;">否</td></tr><tr><td style="text-align:left;">使用场景</td><td style="text-align:left;">可修改、可重复的一批数据记录场景</td><td style="text-align:left;">不可修改、可重复的一批数据记录场景</td><td style="text-align:left;">一串字符的记录场景</td><td style="text-align:left;">不可重复的数据记录场景</td><td style="text-align:left;">以Key检索Value的数据记录场景</td></tr></tbody></table><h4 id="_4-应用场景" tabindex="-1"><a class="header-anchor" href="#_4-应用场景" aria-hidden="true">#</a> 4. 应用场景</h4><p>基于各类数据容器的特点，它们的应用场景如下：</p><ul><li>列表：一批数据，可修改、可重复的存储场景</li><li>元组：一批数据，不可修改、可重复的存储场景</li><li>字符串：一串字符串的存储场景</li><li>集合：一批数据，去重存储场景</li><li>字典：一批数据，可用Key检索Value的存储场景</li></ul>',9),n=[i];function s(f,x){return e(),l("div",null,n)}const r=t(a,[["render",s],["__file","4-0.前言.html.vue"]]);export{r as default};
