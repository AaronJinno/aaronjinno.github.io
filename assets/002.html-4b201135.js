import{_ as e,W as a,X as r,Z as i}from"./framework-ca8d4a1d.js";const t={},n=i('<div class="hint-container danger"><p class="hint-container-title">说在前面</p><p>对于有计算机基础的人来说，学习一门语言一周内搞得，对于初学者则需要两个月。<br> 不过如果按照我写的方式，可以缩减到半个月。</p></div><h4 id="_1、学两遍" tabindex="-1"><a class="header-anchor" href="#_1、学两遍" aria-hidden="true">#</a> 1、学两遍</h4><p>至少要学两遍</p><ul><li>第一遍：找个教程，跟着操作通畅即可，不求甚解</li><li>第二遍：要理解每个概念</li></ul><h4 id="_2、跳过概念解析" tabindex="-1"><a class="header-anchor" href="#_2、跳过概念解析" aria-hidden="true">#</a> 2、跳过概念解析</h4><p>我当初学C++时，看的书第一章就出现了变量、循环等各种新鲜词汇，并且没有任何解释，看的我满头大汗，由于当初电能没网，差点晕过去。</p><p>其实这是我钻牛角尖的原因，这些概念混个脸熟就行，不需要理解，后续章节都会讲到的，这往往是循环依赖的问题。<br> 比如：解释概念A时提到了概念B，而要想理解概念B就得理解概念C和D。</p><p>做法：第一遍学的时候，不需要理解概念，遇到不懂的概念做个标记，等学第二遍的时候基本就懂了。</p><h4 id="_3、知识的前置依赖" tabindex="-1"><a class="header-anchor" href="#_3、知识的前置依赖" aria-hidden="true">#</a> 3、知识的前置依赖</h4><p>有些知识点，在学习之前是有其他知识要求的，是不能越过去学习的。</p><p>比如，学习机器学习之前，必须了解很多高数知识，高数知识就是机器学习的前置依赖，学习一项知识时必须先去学习前置依赖的知识。</p><h4 id="_4、通用基础" tabindex="-1"><a class="header-anchor" href="#_4、通用基础" aria-hidden="true">#</a> 4、通用基础</h4><p>科班学习IT是有很大优势的，数学、操作系统和算法等基础对于理解编程有很大的帮助。</p><p>比如：配置环境变量、使用命令行、理解引用类型等</p><p>对于非科班，遇到这类概念和操作，会非常吃力，而且是不能跳过的。</p><p>建议：非科班推荐系统阅读《鸟叔的Linux私房菜》，平时遇到这类知识就去搜索并记下操作步骤和大致的概念。</p>',16),h=[n];function d(c,p){return a(),r("div",null,h)}const _=e(t,[["render",d],["__file","002.html.vue"]]);export{_ as default};
