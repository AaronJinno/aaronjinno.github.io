import{_ as a,W as e,X as n,Z as i}from"./framework-ca8d4a1d.js";const s={},d=i(`<h2 id="i-注释" tabindex="-1"><a class="header-anchor" href="#i-注释" aria-hidden="true">#</a> Ⅰ. 注释</h2><h4 id="_1、概念" tabindex="-1"><a class="header-anchor" href="#_1、概念" aria-hidden="true">#</a> 1、概念</h4><ul><li>注释：在程序代码中对程序代码进行解释说明的文字。</li><li>作用：注释不是程序，不能被执行，只是对程序代码进行解释说明，让别人可以看懂程序代码的作用，能够大大增强程序的可读性。</li><li>分类：分为单行注释和多行注释</li></ul><h4 id="_2、单行注释" tabindex="-1"><a class="header-anchor" href="#_2、单行注释" aria-hidden="true">#</a> 2、单行注释</h4><p>以 <code>#</code> 开头，<code>#</code> 右边的所有文字当作说明，而不是真正要执行的程序，起辅助说明作用。<br> 规范：<code>#</code> 号和注释内容一般建议以一个空格隔开</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 这里是单行注释，只用来说明，不会执行</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Ha Ha Ha&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3、多行注释" tabindex="-1"><a class="header-anchor" href="#_3、多行注释" aria-hidden="true">#</a> 3、多行注释</h4><p>以一对三个双引号引起来（<code>&quot;&quot;&quot;注释内容&quot;&quot;&quot;</code>），用来解释说明一段代码的作用使用方法<br> 作用：一般对Python文件、类或方法进行解释<br> 注意：多行注释在编辑器里并不会变成灰色。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token triple-quoted-string string">&quot;&quot;&quot;
    这里是多行注释欧,
    多行注释可以随便换行,
    作者：Victor
&quot;&quot;&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;多行注释 awesome&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ii-行与缩进" tabindex="-1"><a class="header-anchor" href="#ii-行与缩进" aria-hidden="true">#</a> Ⅱ. 行与缩进</h2><div class="hint-container danger"><p class="hint-container-title">警觉</p><p>一些在别的语言里是规范的内容，成为了python语法的一部分。<br> Python被戏称为开发时需要带游标卡尺。</p></div><h4 id="_1-缩进语法" tabindex="-1"><a class="header-anchor" href="#_1-缩进语法" aria-hidden="true">#</a> 1. 缩进语法</h4><p>与其他语言不通，Python 的代码块不使用大括号 <code>{}</code>来控制类，函数以及其他逻辑判断。<br> python 最具特色的就是用缩进来写模块。</p><p>缩进的空白数量是可变的，但是所有代码块语句必须包含相同的缩进空白数量，这个必须严格执行。</p><p>建议：每个缩进层次使用 单个制表符 或 两个空格 或 四个空格 , 切记不能混用</p><h4 id="_2-多行语句" tabindex="-1"><a class="header-anchor" href="#_2-多行语句" aria-hidden="true">#</a> 2. 多行语句</h4><ul><li>Python语句中一般以新行作为语句的结束符。</li><li>可以使用斜杠（ \\）将一行的语句分为多行显示。</li><li>语句中包含 [], {} 或 () 括号就不需要使用多行连接符。</li></ul><h4 id="_3-空行" tabindex="-1"><a class="header-anchor" href="#_3-空行" aria-hidden="true">#</a> 3. 空行</h4><ul><li>函数之间或类的方法之间用空行分隔，表示一段新的代码的开始。</li><li>类和函数入口之间也用一行空行分隔，以突出函数入口的开始。</li></ul><p>空行与代码缩进不同，空行并不是Python语法的一部分。书写时不插入空行，Python解释器运行也不会出错。但是空行的作用在于分隔两段不同功能或含义的代码，便于日后代码的维护或重构。</p><p><strong>记住：空行也是程序代码的一部分。</strong></p><h4 id="_4-一行显示多条语句" tabindex="-1"><a class="header-anchor" href="#_4-一行显示多条语句" aria-hidden="true">#</a> 4. 一行显示多条语句</h4><p>Python可以在同一行中使用多条语句，语句之间使用分号 <code>;</code> 分割。<br> 不建议这样，一般一行显示一条语句。</p><h4 id="_5-代码组" tabindex="-1"><a class="header-anchor" href="#_5-代码组" aria-hidden="true">#</a> 5. 代码组</h4><p>缩进相同的一组语句构成一个代码块，我们称之代码组。</p><p>像if、while、def和class这样的复合语句，首行以关键字开始，以冒号 <code>:</code> 结束，该行之后的一行或多行代码构成代码组。<br> 首行及后面的代码组称为一个子句(clause)。</p>`,26),t=[d];function r(o,c){return e(),n("div",null,t)}const h=a(s,[["render",r],["__file","2-1.html.vue"]]);export{h as default};
