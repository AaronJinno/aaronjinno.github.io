import{_ as n,W as s,X as a,Z as e}from"./framework-ca8d4a1d.js";const t={},p=e(`<h2 id="i-定义集合" tabindex="-1"><a class="header-anchor" href="#i-定义集合" aria-hidden="true">#</a> Ⅰ. 定义集合</h2><p>集合，最主要的特点就是：不支持元素的重复（自带去重功能）、并且内容无序</p><h4 id="_1-语法" tabindex="-1"><a class="header-anchor" href="#_1-语法" aria-hidden="true">#</a> 1. 语法</h4><p>使用{}来定义集合。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>变量 <span class="token operator">=</span> <span class="token punctuation">{</span>元素<span class="token punctuation">,</span> 元素<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-定义空集合" tabindex="-1"><a class="header-anchor" href="#_2-定义空集合" aria-hidden="true">#</a> 2. 定义空集合</h4><p>定义空集合只能使用set()，不能直接使用空 <code>{}</code> ，空的 <code>{}</code> 表示dict</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>set1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
set2 <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>set1<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># &lt;class &#39;dict&#39;&gt;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>set2<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># &lt;class &#39;set&#39;&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-集合的特点" tabindex="-1"><a class="header-anchor" href="#_3-集合的特点" aria-hidden="true">#</a> 3. 集合的特点</h4><ul><li>可以容纳多个数据</li><li>可以容纳不同类型的数据（混装）</li><li>数据是无序存储的（不支持下标索引）</li><li>不允许重复数据存在 <ul><li>添加添加重复的数据，不会报错，只是会自动去重而已</li></ul></li><li>可以修改（增加或删除元素等）</li><li>支持for循环</li></ul><h4 id="_4-示例" tabindex="-1"><a class="header-anchor" href="#_4-示例" aria-hidden="true">#</a> 4. 示例</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>set1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token number">2.1</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>set1<span class="token punctuation">)</span>  <span class="token comment"># {1, &#39;hello&#39;, 2.1} ,自动去重</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ii-集合的操作" tabindex="-1"><a class="header-anchor" href="#ii-集合的操作" aria-hidden="true">#</a> Ⅱ. 集合的操作</h2><p>因为集合是无序的，所以集合不支持：下标索引访问</p><table><thead><tr><th style="text-align:left;">操作</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">集合.add(元素)</td><td style="text-align:left;">集合内添加一个元素</td></tr><tr><td style="text-align:left;">集合.remove(元素)</td><td style="text-align:left;">移除集合内指定的元素</td></tr><tr><td style="text-align:left;">集合.pop()</td><td style="text-align:left;">从集合中随机取出一个元素</td></tr><tr><td style="text-align:left;">集合.clear()</td><td style="text-align:left;">将集合清空</td></tr><tr><td style="text-align:left;">集合1.difference(集合2)</td><td style="text-align:left;">得到一个新集合，内含2个集合的差集</td></tr><tr><td style="text-align:left;">集合1.difference_update(集合2)</td><td style="text-align:left;">在集合1中，删除集合2中存在的元素</td></tr><tr><td style="text-align:left;">集合1.union(集合2)</td><td style="text-align:left;">得到1个新集合，内含2个集合的全部元素</td></tr><tr><td style="text-align:left;">len(集合)</td><td style="text-align:left;">得到一个整数，记录了集合的元素数量</td></tr></tbody></table><h4 id="_1-add-添加新元素" tabindex="-1"><a class="header-anchor" href="#_1-add-添加新元素" aria-hidden="true">#</a> 1. add：添加新元素</h4><p>语法：集合.add(元素)。将指定元素，添加到集合内<br> 结果：集合本身被修改（不会返回新集合），添加了新元素</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>set1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">}</span>
set1<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">&quot;ok&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>set1<span class="token punctuation">)</span>  <span class="token comment"># {1, 2, 3, 10, &#39;ok&#39;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-remote-移除元素" tabindex="-1"><a class="header-anchor" href="#_2-remote-移除元素" aria-hidden="true">#</a> 2. remote：移除元素</h4><p>语法：集合.remove(元素)，将指定元素，从集合内移除<br> 结果：集合本身被修改，移除了元素</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>set1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">}</span>
set1<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>set1<span class="token punctuation">)</span>  <span class="token comment"># {3, 1, 2}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-pop-从集合中随机弹出" tabindex="-1"><a class="header-anchor" href="#_3-pop-从集合中随机弹出" aria-hidden="true">#</a> 3. pop：从集合中随机弹出</h4><p>从集合中随机弹出一个元素<br> 语法：集合.pop() 结果：会返回弹出的元素（可以接收），同时集合本身被修改，元素被弹出</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>set1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">}</span>

set1<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token keyword">print</span><span class="token punctuation">(</span>set1<span class="token punctuation">)</span>  <span class="token comment"># {1, 10, 2}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span>  <span class="token comment"># 3</span>

set1<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>  
<span class="token keyword">print</span><span class="token punctuation">(</span>set1<span class="token punctuation">)</span>  <span class="token comment"># {10, 2}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span>  <span class="token comment"># 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-clear-清空集合" tabindex="-1"><a class="header-anchor" href="#_4-clear-清空集合" aria-hidden="true">#</a> 4. clear：清空集合</h4><p>语法：集合.clear() 结果：集合本身被清空</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>set1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">}</span>

set1<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>set1<span class="token punctuation">)</span>   <span class="token comment"># set()，成了空集合</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-difference-集合求差集" tabindex="-1"><a class="header-anchor" href="#_5-difference-集合求差集" aria-hidden="true">#</a> 5. difference：集合求差集</h4><p>取出集合1和集合2的差集（集合1有而集合2没有的）<br> 语法：集合1.difference(集合2)<br> 结果：得到一个新集合，集合1和集合2不变</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>set1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">}</span>
set2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span>

set3 <span class="token operator">=</span> set1<span class="token punctuation">.</span>difference<span class="token punctuation">(</span>set2<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>set1<span class="token punctuation">)</span>  <span class="token comment"># {3, 1, 10, 2}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>set2<span class="token punctuation">)</span>  <span class="token comment"># {2, 3, 4, 5}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>set3<span class="token punctuation">)</span>  <span class="token comment"># {1, 10}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6-difference-update-消除差集" tabindex="-1"><a class="header-anchor" href="#_6-difference-update-消除差集" aria-hidden="true">#</a> 6. difference_update：消除差集</h4><p>对比集合1和集合2，在集合1内，删除和集合2相同的元素。<br> 语法：集合1.difference_update(集合2)<br> 结果：集合1被修改，集合2不变</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>set1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">}</span>
set2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span>

set3 <span class="token operator">=</span> set1<span class="token punctuation">.</span>difference_update<span class="token punctuation">(</span>set2<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>set1<span class="token punctuation">)</span>  <span class="token comment"># {1, 10}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>set2<span class="token punctuation">)</span>  <span class="token comment"># {2, 3, 4, 5}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_7-union-合并集合" tabindex="-1"><a class="header-anchor" href="#_7-union-合并集合" aria-hidden="true">#</a> 7. union：合并集合</h4><p>将集合1和集合2组合成新集合<br> 语法：集合1.union(集合2)<br> 结果：得到新集合，集合1和集合2不变</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>set1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">}</span>
set2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span>

set3 <span class="token operator">=</span> set1<span class="token punctuation">.</span>union<span class="token punctuation">(</span>set2<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>set1<span class="token punctuation">)</span>  <span class="token comment"># {3, 1, 10, 2}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>set2<span class="token punctuation">)</span>  <span class="token comment"># {2, 3, 4, 5}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>set3<span class="token punctuation">)</span>  <span class="token comment"># {1, 2, 3, 4, 5, 10}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_8-len-集合长度" tabindex="-1"><a class="header-anchor" href="#_8-len-集合长度" aria-hidden="true">#</a> 8. len：集合长度</h4><p>统计集合内有多少元素</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>set1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">}</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>set1<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_9-遍历集合" tabindex="-1"><a class="header-anchor" href="#_9-遍历集合" aria-hidden="true">#</a> 9. 遍历集合</h4><p>集合不支持下标索引，所以也就不支持使用while循环，只能使用for循环</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>set1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">}</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> set1<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,42),o=[p];function c(l,i){return s(),a("div",null,o)}const d=n(t,[["render",c],["__file","4-4.set 集合.html.vue"]]);export{d as default};
