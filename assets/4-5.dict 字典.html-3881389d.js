import{_ as n,W as s,X as a,Z as t}from"./framework-ca8d4a1d.js";const p={},e=t(`<h2 id="i-字典的定义" tabindex="-1"><a class="header-anchor" href="#i-字典的定义" aria-hidden="true">#</a> Ⅰ. 字典的定义</h2><h4 id="_1-定义字典" tabindex="-1"><a class="header-anchor" href="#_1-定义字典" aria-hidden="true">#</a> 1. 定义字典</h4><p>字典的定义，同样使用{}，不过存储的元素是一个个的：键值对。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>变量 <span class="token operator">=</span> <span class="token punctuation">{</span>key<span class="token punctuation">:</span>value<span class="token punctuation">,</span> key<span class="token punctuation">:</span>value<span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>

dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;Jinno&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;shit&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">:</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">20.1</span><span class="token punctuation">:</span> <span class="token number">10.2</span><span class="token punctuation">}</span>

<span class="token comment"># 定义空字典</span>
变量 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
变量 <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-字典嵌套" tabindex="-1"><a class="header-anchor" href="#_2-字典嵌套" aria-hidden="true">#</a> 2. 字典嵌套</h4><p>字典的Key和Value可以是任意数据类型（Key不可为字典），也就是value也可以是字典，达到嵌套的效果。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>变量 <span class="token operator">=</span> <span class="token punctuation">{</span>
    变量<span class="token punctuation">:</span><span class="token punctuation">{</span>
        key<span class="token punctuation">:</span>value<span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

dict1 <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;Jinno&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">&quot;gender&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;male&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string">&quot;Aaron&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token string">&quot;gender&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;female&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-字典特性" tabindex="-1"><a class="header-anchor" href="#_3-字典特性" aria-hidden="true">#</a> 3. 字典特性</h4><ul><li>使用{}存储原始，每一个元素是一个键值对</li><li>可以修改（增加或删除更新元素等）</li><li>每一个键值对包含Key和Value（用冒号分隔）</li><li>键值对之间使用逗号分隔</li><li>Key和Value可以是任意类型的数据（key不可为字典）</li><li>Key不可重复，重复会对原有数据覆盖</li><li>不支持下标索引</li><li>支持for循环，不支持while循环</li></ul><h2 id="ii-操作字典" tabindex="-1"><a class="header-anchor" href="#ii-操作字典" aria-hidden="true">#</a> Ⅱ. 操作字典</h2><h4 id="_1-字典数据的获取" tabindex="-1"><a class="header-anchor" href="#_1-字典数据的获取" aria-hidden="true">#</a> 1. 字典数据的获取</h4><p>字典同集合一样，不可以使用下标索引，但是字典可以通过Key值来取得对应的Value。</p><ul><li>字典[key]：可以取到对应的value。</li><li>字典[外层key][内层key]：可以获取嵌套字典的内容</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;Jinno&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;shit&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">:</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">20.1</span><span class="token punctuation">:</span> <span class="token number">10.2</span><span class="token punctuation">}</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>dict1<span class="token punctuation">[</span><span class="token string">&quot;Jinno&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># shit</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>dict1<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 25</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>dict1<span class="token punctuation">[</span><span class="token number">20.1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 10.2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-增改元素" tabindex="-1"><a class="header-anchor" href="#_2-增改元素" aria-hidden="true">#</a> 2. 增改元素</h4><p>语法：字典[Key] = Value，<br> key已存在就是修改，未存在，就是更新。<br> 字典Key不可以重复，所以对已存在的Key执行上述操作，就是更新Value值。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;Jinno&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;shit&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">:</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">20.1</span><span class="token punctuation">:</span> <span class="token number">10.2</span><span class="token punctuation">}</span>
dict1<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;hello&quot;</span>
dict1<span class="token punctuation">[</span><span class="token string">&quot;lang&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;eng&quot;</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>dict1<span class="token punctuation">)</span>  <span class="token comment"># {&#39;Jinno&#39;: &#39;shit&#39;, 100: &#39;hello&#39;, 20.1: 10.2, &#39;lang&#39;: &#39;eng&#39;} </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-删除元素" tabindex="-1"><a class="header-anchor" href="#_3-删除元素" aria-hidden="true">#</a> 3. 删除元素</h4><ul><li>pop(key)：将指定key的value弹出，可以使用变量接收弹出的value</li><li>clear()：清空整个字典内的元素</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># pop(key)</span>
dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;shit&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">:</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">20.1</span><span class="token punctuation">:</span> <span class="token number">10.2</span><span class="token punctuation">}</span>
name <span class="token operator">=</span> dict1<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>  <span class="token comment"># shit</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>dict1<span class="token punctuation">)</span>  <span class="token comment"># {100: 25, 20.1: 10.2}</span>


<span class="token comment"># clear()</span>
dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;shit&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">:</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">20.1</span><span class="token punctuation">:</span> <span class="token number">10.2</span><span class="token punctuation">}</span>
dict1<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>dict1<span class="token punctuation">)</span>  <span class="token comment"># {}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-获取全部key" tabindex="-1"><a class="header-anchor" href="#_4-获取全部key" aria-hidden="true">#</a> 4. 获取全部key</h4><p>keys()方法用来获取字典中所有的key。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;shit&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">:</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">20.1</span><span class="token punctuation">:</span> <span class="token number">10.2</span><span class="token punctuation">}</span>
keys <span class="token operator">=</span> dict1<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>keys<span class="token punctuation">)</span>   <span class="token comment"># dict_keys([&#39;name&#39;, 100, 20.1])</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>keys<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># &lt;class &#39;dict_keys&#39;&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-遍历字典" tabindex="-1"><a class="header-anchor" href="#_5-遍历字典" aria-hidden="true">#</a> 5. 遍历字典</h4><p>字典不支持下标索引，只能使用for循环遍历</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;shit&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token string">&quot;gender&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;male&quot;</span><span class="token punctuation">}</span>

<span class="token keyword">for</span> key <span class="token keyword">in</span> dict1<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>dict1<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6-计算元素数量" tabindex="-1"><a class="header-anchor" href="#_6-计算元素数量" aria-hidden="true">#</a> 6. 计算元素数量</h4><p>使用len(dict)计算字典内元素（键值对）的数量。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>dict1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;shit&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token string">&quot;gender&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;male&quot;</span><span class="token punctuation">}</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>dict1<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,29),o=[e];function c(i,u){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","4-5.dict 字典.html.vue"]]);export{r as default};
