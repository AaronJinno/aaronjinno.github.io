import{_ as t,W as n,X as a,Z as e}from"./framework-ca8d4a1d.js";const s={},l=e(`<h2 id="i-算术运算符" tabindex="-1"><a class="header-anchor" href="#i-算术运算符" aria-hidden="true">#</a> Ⅰ. 算术运算符</h2><p>两个数字之间的算是运算</p><table><thead><tr><th style="text-align:center;">运算符</th><th style="text-align:center;">描述</th><th style="text-align:center;">示例</th></tr></thead><tbody><tr><td style="text-align:center;">+</td><td style="text-align:center;">加</td><td style="text-align:center;">a+b</td></tr><tr><td style="text-align:center;">-</td><td style="text-align:center;">减</td><td style="text-align:center;">a-b</td></tr><tr><td style="text-align:center;">*</td><td style="text-align:center;">乘</td><td style="text-align:center;">a*b</td></tr><tr><td style="text-align:center;">/</td><td style="text-align:center;">除</td><td style="text-align:center;">a/b</td></tr><tr><td style="text-align:center;">//</td><td style="text-align:center;">取整除</td><td style="text-align:center;">9//2结果为4；9.0//2.0 结果为4.0</td></tr><tr><td style="text-align:center;">%</td><td style="text-align:center;">取余</td><td style="text-align:center;">9%2 结果为1</td></tr><tr><td style="text-align:center;">**</td><td style="text-align:center;">指数</td><td style="text-align:center;">2**10 结果为1024</td></tr></tbody></table><p>代码示例：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>num1 <span class="token operator">=</span> <span class="token number">9</span>
num2 <span class="token operator">=</span> <span class="token number">2</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>num1 <span class="token operator">+</span> num2<span class="token punctuation">)</span>  <span class="token comment"># 11</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>num1 <span class="token operator">-</span> num2<span class="token punctuation">)</span>  <span class="token comment"># 7</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>num1 <span class="token operator">*</span> num2<span class="token punctuation">)</span>  <span class="token comment"># 18</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>num1 <span class="token operator">/</span> num2<span class="token punctuation">)</span>  <span class="token comment"># 4.5</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>num1 <span class="token operator">//</span> num2<span class="token punctuation">)</span>  <span class="token comment"># 4</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>num1 <span class="token operator">%</span> num2<span class="token punctuation">)</span>  <span class="token comment"># 1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>num1 <span class="token operator">**</span> num2<span class="token punctuation">)</span>  <span class="token comment"># 81</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ii-赋值运算符" tabindex="-1"><a class="header-anchor" href="#ii-赋值运算符" aria-hidden="true">#</a> Ⅱ. 赋值运算符</h2><p>和其他语言一样，一个 <code>=</code> 号是赋值，两个 <code>==</code> 才是相等<br> 同时Python也包含复合赋值运算符</p><table><thead><tr><th style="text-align:center;">运算符</th><th style="text-align:center;">描述</th><th style="text-align:center;">示例</th></tr></thead><tbody><tr><td style="text-align:center;">=</td><td style="text-align:center;">赋值运算符；把 = 号右边的结果 赋给 左边的变量</td><td style="text-align:center;">num = 1 + 2 ，num值为3</td></tr><tr><td style="text-align:center;">+=</td><td style="text-align:center;">加法赋值运算符</td><td style="text-align:center;">c += a 等效于 c = c + a</td></tr><tr><td style="text-align:center;">-=</td><td style="text-align:center;">减法赋值运算符</td><td style="text-align:center;">c -= a 等效于 c = c - a</td></tr><tr><td style="text-align:center;">*=</td><td style="text-align:center;">乘法赋值运算符</td><td style="text-align:center;">c *= a 等效于 c = c * a</td></tr><tr><td style="text-align:center;">/=</td><td style="text-align:center;">除法赋值运算符</td><td style="text-align:center;">c /= a 等效于 c = c / a</td></tr><tr><td style="text-align:center;">%=</td><td style="text-align:center;">取模赋值运算符</td><td style="text-align:center;">c %= a 等效于 c = c % a</td></tr><tr><td style="text-align:center;">**=</td><td style="text-align:center;">幂赋值运算符</td><td style="text-align:center;">c **= a 等效于 c = c ** a</td></tr><tr><td style="text-align:center;">//=</td><td style="text-align:center;">取整除赋值运算符</td><td style="text-align:center;">c //= a 等效于 c = c // a</td></tr></tbody></table><h2 id="iii-比较运算符" tabindex="-1"><a class="header-anchor" href="#iii-比较运算符" aria-hidden="true">#</a> Ⅲ. 比较运算符</h2><h4 id="_1-六种比较运算符" tabindex="-1"><a class="header-anchor" href="#_1-六种比较运算符" aria-hidden="true">#</a> 1. 六种比较运算符</h4><table><thead><tr><th style="text-align:left;">运算符</th><th style="text-align:left;">描述</th><th style="text-align:left;">示例</th></tr></thead><tbody><tr><td style="text-align:left;">==</td><td style="text-align:left;">判断内容是否相等，满足为True，不满足为False</td><td style="text-align:left;">如a=3,b=3，则(a == b) 为 True</td></tr><tr><td style="text-align:left;">!=</td><td style="text-align:left;">判断内容是否不相等，满足为True，不满足为False</td><td style="text-align:left;">如a=1,b=3，则(a != b) 为 True</td></tr><tr><td style="text-align:left;">&gt;</td><td style="text-align:left;">判断运算符左侧内容是否大于右侧</td><td style="text-align:left;">如a=7,b=3，则(a &gt; b)  为 True</td></tr><tr><td style="text-align:left;">&lt;</td><td style="text-align:left;">判断运算符左侧内容是否小于右侧</td><td style="text-align:left;">如a=3,b=7，则(a &lt; b)  为 True</td></tr><tr><td style="text-align:left;">&gt;=</td><td style="text-align:left;">判断运算符左侧内容是否大于等于右侧</td><td style="text-align:left;">如a=3,b=3，则(a &gt;= b) 为 True</td></tr><tr><td style="text-align:left;">&lt;=</td><td style="text-align:left;">判断运算符左侧内容是否小于等于右侧</td><td style="text-align:left;">如a=3,b=3，则(a &lt;= b) 为 True</td></tr></tbody></table><h4 id="_2-代码示例" tabindex="-1"><a class="header-anchor" href="#_2-代码示例" aria-hidden="true">#</a> 2. 代码示例</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">10</span>
b <span class="token operator">=</span> <span class="token number">100</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a <span class="token operator">==</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># False  </span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a <span class="token operator">!=</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># True</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a <span class="token operator">&gt;</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># False</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a <span class="token operator">&lt;</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># True</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a <span class="token operator">&gt;=</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># False</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a <span class="token operator">&lt;=</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="vi-逻辑运算符" tabindex="-1"><a class="header-anchor" href="#vi-逻辑运算符" aria-hidden="true">#</a> Ⅵ. 逻辑运算符</h2><p>Python语言支持逻辑运算符。</p><table><thead><tr><th style="text-align:left;">运算符</th><th style="text-align:left;">逻辑表达式</th><th style="text-align:left;">描述</th><th style="text-align:left;">实例</th></tr></thead><tbody><tr><td style="text-align:left;">and</td><td style="text-align:left;">x and y</td><td style="text-align:left;">布尔&quot;与&quot; - 如果 x 为 False，x and y 返回 False，否则它返回 y 的计算值。</td><td style="text-align:left;">(a and b) 返回 20。</td></tr><tr><td style="text-align:left;">or</td><td style="text-align:left;">x or y</td><td style="text-align:left;">布尔&quot;或&quot; - 如果 x 是非 0，它返回 x 的计算值，否则它返回 y 的计算值。</td><td style="text-align:left;">(a or b) 返回 10。</td></tr><tr><td style="text-align:left;">not</td><td style="text-align:left;">not x</td><td style="text-align:left;">布尔&quot;非&quot; - 如果 x 为 True，返回 False 。如果 x 为 False，它返回 True。</td><td style="text-align:left;">not(a and b) 返回 False</td></tr></tbody></table><p>逻辑运算符返回的结果是布尔类型，常用与条件判断 。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token boolean">True</span> <span class="token keyword">and</span> <span class="token boolean">True</span><span class="token punctuation">)</span>  <span class="token comment"># True</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token boolean">True</span> <span class="token keyword">and</span> <span class="token boolean">False</span><span class="token punctuation">)</span>  <span class="token comment"># False</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token boolean">False</span> <span class="token keyword">and</span> <span class="token boolean">False</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token boolean">True</span> <span class="token keyword">or</span> <span class="token boolean">True</span><span class="token punctuation">)</span>  <span class="token comment"># True</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token boolean">True</span> <span class="token keyword">or</span> <span class="token boolean">False</span><span class="token punctuation">)</span>  <span class="token comment"># True</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token boolean">False</span> <span class="token keyword">or</span> <span class="token boolean">False</span><span class="token punctuation">)</span>  <span class="token comment"># False</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">not</span> <span class="token boolean">True</span><span class="token punctuation">)</span>  <span class="token comment"># False</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">not</span> <span class="token boolean">False</span><span class="token punctuation">)</span>  <span class="token comment"># True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="v-其他运算符" tabindex="-1"><a class="header-anchor" href="#v-其他运算符" aria-hidden="true">#</a> Ⅴ. 其他运算符</h2><h4 id="_1-成员运算符" tabindex="-1"><a class="header-anchor" href="#_1-成员运算符" aria-hidden="true">#</a> 1. 成员运算符</h4><div class="hint-container warning"><p class="hint-container-title">注意</p><p>需要先了解OOP</p></div><h4 id="_2-身份运算符" tabindex="-1"><a class="header-anchor" href="#_2-身份运算符" aria-hidden="true">#</a> 2. 身份运算符</h4><div class="hint-container warning"><p class="hint-container-title">注意</p><p>需要先了解OOP</p></div><h4 id="_3-位运算符" tabindex="-1"><a class="header-anchor" href="#_3-位运算符" aria-hidden="true">#</a> 3. 位运算符</h4><p>位运算符是把数字看作二进制来进行计算的，很少用到。<br> 暂略。</p>`,25),p=[l];function o(c,d){return n(),a("div",null,p)}const r=t(s,[["render",o],["__file","2-5.html.vue"]]);export{r as default};
