import{_ as n,W as e,X as a,Z as s}from"./framework-ca8d4a1d.js";const t={},i=s(`<h4 id="_1、概念" tabindex="-1"><a class="header-anchor" href="#_1、概念" aria-hidden="true">#</a> 1、概念</h4><ul><li>注释：在程序代码中对程序代码进行解释说明的文字。</li><li>作用：注释不是程序，不能被执行，只是对程序代码进行解释说明，让别人可以看懂程序代码的作用，能够大大增强程序的可读性。</li><li>分类：分为单行注释和多行注释</li></ul><h4 id="_2、单行注释" tabindex="-1"><a class="header-anchor" href="#_2、单行注释" aria-hidden="true">#</a> 2、单行注释</h4><p>以 <code>#</code> 开头，<code>#</code> 右边的所有文字当作说明，而不是真正要执行的程序，起辅助说明作用。<br> 规范：<code>#</code> 号和注释内容一般建议以一个空格隔开</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 这里是单行注释，只用来说明，不会执行</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Ha Ha Ha&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3、多行注释" tabindex="-1"><a class="header-anchor" href="#_3、多行注释" aria-hidden="true">#</a> 3、多行注释</h4><p>以一对三个双引号引起来（<code>&quot;&quot;&quot;注释内容&quot;&quot;&quot;</code>），用来解释说明一段代码的作用使用方法<br> 作用：一般对Python文件、类或方法进行解释<br> 注意：多行注释在编辑器里并不会变成灰色。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token triple-quoted-string string">&quot;&quot;&quot;
    这里是多行注释欧,
    多行注释可以随便换行,
    作者：Victor
&quot;&quot;&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;多行注释 awesome&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),o=[i];function d(c,l){return e(),a("div",null,o)}const u=n(t,[["render",d],["__file","2-1.html.vue"]]);export{u as default};
