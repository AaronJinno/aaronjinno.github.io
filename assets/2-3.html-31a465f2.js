import{_ as n,W as s,X as a,Z as t}from"./framework-ca8d4a1d.js";const e={},p=t(`<h2 id="i-数据类型介绍" tabindex="-1"><a class="header-anchor" href="#i-数据类型介绍" aria-hidden="true">#</a> Ⅰ. 数据类型介绍</h2><h4 id="_1-概念" tabindex="-1"><a class="header-anchor" href="#_1-概念" aria-hidden="true">#</a> 1. 概念</h4><p>字面量（数据，值）是有类型的，一般称之为：数据类型</p><table><thead><tr><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">Number（数字）</td><td style="text-align:left;">包括：<br>int（整数）<br>float（浮点数）<br>complex（复数）</td><td style="text-align:left;">int： 10、-10<br> float：1.12、-3.2 <br>complex：4+3j（以j结尾表示复数</td></tr><tr><td style="text-align:left;">Bool（布尔）</td><td style="text-align:left;">描述真假的数据类型</td><td style="text-align:left;">True为真（底层是1），False为假（底层是0）</td></tr><tr><td style="text-align:left;">String（字符串）</td><td style="text-align:left;">描述文本的一种数据类型</td><td style="text-align:left;">字符串（string）由任意数量的字符组成</td></tr><tr><td style="text-align:left;">List（列表）</td><td style="text-align:left;">有序的可变序列</td><td style="text-align:left;">Python中使用最频繁的数据类型，可有序记录一堆数据</td></tr><tr><td style="text-align:left;">Tuple</td><td style="text-align:left;">有序的不可变序列</td><td style="text-align:left;">可有序记录一堆不可变的Python数据集合</td></tr><tr><td style="text-align:left;">Set（集合）</td><td style="text-align:left;">无序不重复集合</td><td style="text-align:left;">可无序记录一堆不重复的Python数据集合</td></tr><tr><td style="text-align:left;">Dictionary（字典）</td><td style="text-align:left;">无序K-V集合</td><td style="text-align:left;">可无序记录一堆Key-Value型的Python数据集合</td></tr></tbody></table><h4 id="_2-type" tabindex="-1"><a class="header-anchor" href="#_2-type" aria-hidden="true">#</a> 2. type()</h4><p>可以通过type()语句来得到数据的类型</p><p>语法：<code>type(被查看类型的数据)</code><br> PS：这里的数据可以直接是字面量也可以是变量</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>var1 <span class="token operator">=</span> <span class="token number">1</span>
var2 <span class="token operator">=</span> <span class="token number">1.1</span>
var3 <span class="token operator">=</span> <span class="token string">&quot;Mask&quot;</span>
<span class="token comment"># type()的返回值即为具体的数据类型，可以直接打印查看</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token number">10.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token string">&quot;Victor&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 直接打印变量</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>var2<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>var3<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行结果：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&lt;</span>class <span class="token string">&#39;int&#39;</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>class <span class="token string">&#39;float&#39;</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>class <span class="token string">&#39;str&#39;</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>class <span class="token string">&#39;int&#39;</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>class <span class="token string">&#39;float&#39;</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>class <span class="token string">&#39;str&#39;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-变量的类型" tabindex="-1"><a class="header-anchor" href="#_3-变量的类型" aria-hidden="true">#</a> 3. 变量的类型</h4><p>变量是没有类型的，变量只是一个标识符，用来指向数据（值），数据类型指的不是变量的类型，而是变量所存储（指向）的值（字面量）的类型。</p><h2 id="ii-数据类型转换" tabindex="-1"><a class="header-anchor" href="#ii-数据类型转换" aria-hidden="true">#</a> Ⅱ. 数据类型转换</h2><h4 id="_1-概述" tabindex="-1"><a class="header-anchor" href="#_1-概述" aria-hidden="true">#</a> 1. 概述</h4><p>数据类型之间，在特定的场景下，是可以相互转换的，如字符串转数字、数字转字符串等</p><p>有时，我们获取的数据类型并非是需要的数据类型，这是就需要进行数据类型转换了，比如：</p><ul><li>从文件中读取的数字，默认是字符串，我们需要转换成数字类型</li><li>数字转换成字符串用以写出到外部系统</li></ul><h4 id="_2-使用函数转换" tabindex="-1"><a class="header-anchor" href="#_2-使用函数转换" aria-hidden="true">#</a> 2. 使用函数转换</h4><p>这里暂时只介绍int、float、string之间的转换。</p><table><thead><tr><th style="text-align:left;">语句（函数）</th><th style="text-align:left;">作用</th></tr></thead><tbody><tr><td style="text-align:left;">int(x)</td><td style="text-align:left;">将x转换为一个整数</td></tr><tr><td style="text-align:left;">float(x)</td><td style="text-align:left;">将x转换为一个浮点数</td></tr><tr><td style="text-align:left;">str(x)</td><td style="text-align:left;">将对象 x 转换为字符串</td></tr></tbody></table><p>上面三个函数的返回值就是转换后的值，可以直接输出或赋值给变量</p><h4 id="_3-注意事项" tabindex="-1"><a class="header-anchor" href="#_3-注意事项" aria-hidden="true">#</a> 3. 注意事项</h4><ul><li>任何类型，都可以通过str()，转换成字符串</li><li>字符串内必须真的是数字，才可以将字符串转换为数字，否则会报错</li><li>整数转浮点数会在小数位补0</li><li>浮点数转整数会直接舍去小数部分</li></ul><h4 id="_4-示例" tabindex="-1"><a class="header-anchor" href="#_4-示例" aria-hidden="true">#</a> 4. 示例</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>atr1 <span class="token operator">=</span> <span class="token number">12</span>
atr2 <span class="token operator">=</span> <span class="token number">13.4</span>
atr3 <span class="token operator">=</span> <span class="token string">&quot;23&quot;</span>

<span class="token comment"># int(x)测试</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>atr2<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 13</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>atr3<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 23</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 报错:ValueError</span>

<span class="token comment"># float(x)测试</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">float</span><span class="token punctuation">(</span>atr1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 12.0</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">float</span><span class="token punctuation">(</span>atr3<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 23.0</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">float</span><span class="token punctuation">(</span><span class="token string">&quot;a1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 报错:ValueError</span>

<span class="token comment"># str(x)测试</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>atr1<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 字符串 12</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>atr2<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 字符串 12.4</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token string">&quot;56&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># &lt;class &#39;str&#39;&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="iii-简单数据类型" tabindex="-1"><a class="header-anchor" href="#iii-简单数据类型" aria-hidden="true">#</a> Ⅲ. 简单数据类型</h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>七种数据类型里，List、Tuple、Set、Dictionary都是比较复杂的，需要在数据容器章节学习，这里介绍三种简单的数据类型：Number、String和Boolean。</p></div><h4 id="_1-number" tabindex="-1"><a class="header-anchor" href="#_1-number" aria-hidden="true">#</a> 1. Number</h4><p>Python支持三种数字类型</p><ul><li>int：整形</li><li>float：浮点型</li><li>complex：复数，由实数部分和虚数部分构成，可以用 a + bj,或者 complex(a,b) 表示， 复数的实部 a 和虚部 b 都是浮点型。</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>n1 <span class="token operator">=</span> <span class="token number">1</span>
n2 <span class="token operator">=</span> <span class="token number">1.2</span>
n3 <span class="token operator">=</span> <span class="token number">3.14j</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>n1<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># &lt;class &#39;int&#39;&gt; </span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>n2<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># &lt;class &#39;float&#39;&gt; </span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>n3<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># &lt;class &#39;complex&#39;&gt; </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-string" tabindex="-1"><a class="header-anchor" href="#_2-string" aria-hidden="true">#</a> 2. String</h4><p>详见：<a href="/zh/python/base/2.%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/2-6">字符串详解</a></p><h4 id="_3-boolean" tabindex="-1"><a class="header-anchor" href="#_3-boolean" aria-hidden="true">#</a> 3. Boolean</h4><div class="hint-container tip"><p class="hint-container-title">提示</p><p>bool的底层其实是数字储存的，True为1，False为0。<br> 因此，在使用bool值的场合，可以使用功能0代替False，使用1代替True。<br> 其实，任何非0的字符都可以代替True。</p></div><p>Boolean，布尔类型，只有两个值：</p><ul><li>True：表示真（是、肯定）</li><li>False：表示假 （否、否定）</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>bool1 <span class="token operator">=</span> <span class="token boolean">True</span>
bool2 <span class="token operator">=</span> <span class="token boolean">False</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>bool1<span class="token punctuation">)</span>  <span class="token comment"># True</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>bool2<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># &lt;class &#39;bool&#39;&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>bool通常用于逻辑判断，一般使用比较运算符获取布尔值用于判断 。<br> 详见：<a href="/zh/python/base/2.%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/2-5">运算符</a></p>`,39),l=[p];function i(o,c){return s(),a("div",null,l)}const u=n(e,[["render",i],["__file","2-3.html.vue"]]);export{u as default};
